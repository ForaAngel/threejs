/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Cube002: THREE.Mesh;
    Cube002_1: THREE.Mesh;
  };
  materials: {
    look: THREE.MeshStandardMaterial;
    green: THREE.MeshStandardMaterial;
  };
};

export function ArbolModel(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/models/arbol.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group position={[0.824, 0.02, 0.095]} scale={[1, 1, 1]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube002.geometry}
          material={materials.look}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube002_1.geometry}
          material={materials.green}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/models/arbol.glb");
